name: 'clang-tidy review'
author: 'Peter Hill'
description: 'Create a pull request review based on warnings from clang-tidy'
branding:
  icon: 'book-open'
  color: 'red'

inputs:
  repo:
    default: ${{ github.repository }}
  pr:
    default: ${{ github.event.pull_request.number }}
  token:
    description: 'GitHub authentication token'
    default: ${{ github.token }}
    required: false
  base_dir:
    description: 'Absolute path of initial working directory to fix absolute paths in clang-tidy fixes file'
    default: ${{ github.workspace }}
    required: false
  fixes_file:
    description: 'Path to pre-generated clang-tidy fixes file'
    required: true
  include:
    description: 'Comma-separated list of files or patterns to include'
    default: "*.[ch],*.[ch]xx,*.[ch]pp,*.[ch]++,*.cc,*.hh"
    required: false
  exclude:
    description: 'Comma-separated list of files or patterns to exclude'
    default: ''
    required: false
  max_comments:
    description: 'Maximum number of comments to post at once'
    required: false
    default: '25'
  lgtm_comment_body:
    description: 'Message to post on PR if no issues are found. An empty string will post no LGTM comment.'
    required: false
    default: '`clang-tidy` found no issues, all clean :+1:'
  
outputs:
  total_comments:
    description: 'Total number of warnings from clang-tidy'
    value: ${{ steps.run-review.outputs.total_comments }}

runs:
  using: composite
  steps:
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install Python dependencies
      shell: bash
      run: pip install -r ${{ github.action_path }}/requirements.txt
    - name: Run clang-tidy review
      id: run-review
      shell: bash
      run: >-
        ${{ github.action_path }}/review.py
        --repo=${{ inputs.repo }}
        --pr=${{ inputs.pr }}
        --token=${{ inputs.token }}
        --base_dir=${{ inputs.base_dir }}
        --fixes_file=${{ inputs.fixes_file }}
        --include='${{ inputs.include }}'
        --exclude='${{ inputs.exclude }}'
        --max-comments=${{ inputs.max_comments }}
        --lgtm-comment-body='${{ inputs.lgtm_comment_body }}'
